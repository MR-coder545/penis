import pygame
import numpy as np

# Константы
WIDTH, HEIGHT = 2556, 1440
CELL_SIZE = 10
FPS = 10

# Цвета
BLACK = (0, 0, 0)
WHITE = (0, 255, 0)
def draw_grid(screen, grid):
    for y in range(grid.shape[0]):
        for x in range(grid.shape[1]):
            color = WHITE if grid[y, x] == 1 else BLACK
            pygame.draw.rect(screen, color, (x * CELL_SIZE, y * CELL_SIZE, CELL_SIZE, CELL_SIZE))


def update_grid(grid):
    new_grid = np.copy(grid)
    for y in range(grid.shape[0]):
        for x in range(grid.shape[1]):
            # Считаю количество живых соседей
            neighbors = np.sum(grid[y - 1:y + 2, x - 1:x + 2]) - grid[y, x]
            # Применяю правила игры "Жизнь"
            if grid[y, x] == 1 and (neighbors < 2 or neighbors > 3):
                new_grid[y, x] = 0
            elif grid[y, x] == 0 and neighbors == 3:
                new_grid[y, x] = 1
    return new_grid


def main():
    pygame.init()
    screen = pygame.display.set_mode((WIDTH, HEIGHT))
    pygame.display.set_caption("Игра Жизнь")
    clock = pygame.time.Clock()

    # Инициализируем сетку
    grid = np.zeros((HEIGHT // CELL_SIZE, WIDTH // CELL_SIZE))

    # Начальные живые клетки (можно изменить на любые координаты)
    grid[10, 10] = 1
    grid[11, 11] = 1
    grid[12, 9] = 1
    grid[12, 10] = 1
    grid[30, 30] = 1
    grid[30, 31] = 1
    grid[30, 32] = 1
    grid[28, 28] = 1
    grid[29, 29] = 1
    grid[30, 29] = 1
    grid[29, 30] = 1
    grid[12, 11] = 1

    running = True
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

        grid = update_grid(grid)
        screen.fill(BLACK)
        draw_grid(screen, grid)
        pygame.display.flip()
        clock.tick(FPS)

    pygame.quit()


if __name__ == "__main__":
    main()
